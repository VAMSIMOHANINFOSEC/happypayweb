{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { PrimeReactContext } from 'primereact/api';\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\nimport { useMergeProps } from 'primereact/hooks';\nimport { ObjectUtils, classNames } from 'primereact/utils';\nvar classes = {\n  root: 'p-float-label'\n};\nvar styles = \"\\n@layer primereact {\\n    .p-float-label {\\n        display: block;\\n        position: relative;\\n    }\\n    \\n    .p-float-label label {\\n        position: absolute;\\n        pointer-events: none;\\n        top: 50%;\\n        margin-top: -.5rem;\\n        transition-property: all;\\n        transition-timing-function: ease;\\n        line-height: 1;\\n    }\\n    \\n    .p-float-label:has(textarea) label {\\n        top: 1rem;\\n    }\\n    \\n    .p-float-label:has(input:focus) label,\\n    .p-float-label:has(input.p-filled) label,\\n    .p-float-label:has(input:-webkit-autofill) label,\\n    .p-float-label:has(textarea:focus) label,\\n    .p-float-label:has(textarea.p-filled) label,\\n    .p-float-label:has(.p-inputwrapper-focus) label,\\n    .p-float-label:has(.p-inputwrapper-filled) label {\\n        top: -.75rem;\\n        font-size: 12px;\\n    }\\n    \\n    .p-float-label .p-placeholder,\\n    .p-float-label input::placeholder,\\n    .p-float-label .p-inputtext::placeholder {\\n        opacity: 0;\\n        transition-property: all;\\n        transition-timing-function: ease;\\n    }\\n    \\n    .p-float-label .p-focus .p-placeholder,\\n    .p-float-label input:focus::placeholder,\\n    .p-float-label .p-inputtext:focus::placeholder {\\n        opacity: 1;\\n        transition-property: all;\\n        transition-timing-function: ease;\\n    }\\n}\";\nvar FloatLabelBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'FloatLabel',\n    children: undefined\n  },\n  css: {\n    classes: classes,\n    styles: styles\n  }\n});\nvar FloatLabel = /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var mergeProps = useMergeProps();\n  var context = React.useContext(PrimeReactContext);\n  var props = FloatLabelBase.getProps(inProps, context);\n  var elementRef = React.useRef(ref);\n  var _FloatLabelBase$setMe = FloatLabelBase.setMetaData({\n      props: props\n    }),\n    ptm = _FloatLabelBase$setMe.ptm,\n    cx = _FloatLabelBase$setMe.cx,\n    isUnstyled = _FloatLabelBase$setMe.isUnstyled;\n  useHandleStyle(FloatLabelBase.css.styles, isUnstyled, {\n    name: 'floatlabel'\n  });\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: classNames(cx('root'))\n  }, FloatLabelBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(\"span\", rootProps, props.children);\n}));\nFloatLabel.displayName = 'FloatLabel';\nexport { FloatLabel };","map":{"version":3,"names":["React","PrimeReactContext","ComponentBase","useHandleStyle","useMergeProps","ObjectUtils","classNames","classes","root","styles","FloatLabelBase","extend","defaultProps","__TYPE","children","undefined","css","FloatLabel","memo","forwardRef","inProps","ref","mergeProps","context","useContext","props","getProps","elementRef","useRef","_FloatLabelBase$setMe","setMetaData","ptm","cx","isUnstyled","name","useEffect","combinedRefs","rootProps","className","getOtherProps","createElement","displayName"],"sources":["/Volumes/VMChowdary/Happypayweb/happypayweb/node_modules/primereact/floatlabel/floatlabel.esm.js"],"sourcesContent":["'use client';\nimport * as React from 'react';\nimport { PrimeReactContext } from 'primereact/api';\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\nimport { useMergeProps } from 'primereact/hooks';\nimport { ObjectUtils, classNames } from 'primereact/utils';\n\nvar classes = {\n  root: 'p-float-label'\n};\nvar styles = \"\\n@layer primereact {\\n    .p-float-label {\\n        display: block;\\n        position: relative;\\n    }\\n    \\n    .p-float-label label {\\n        position: absolute;\\n        pointer-events: none;\\n        top: 50%;\\n        margin-top: -.5rem;\\n        transition-property: all;\\n        transition-timing-function: ease;\\n        line-height: 1;\\n    }\\n    \\n    .p-float-label:has(textarea) label {\\n        top: 1rem;\\n    }\\n    \\n    .p-float-label:has(input:focus) label,\\n    .p-float-label:has(input.p-filled) label,\\n    .p-float-label:has(input:-webkit-autofill) label,\\n    .p-float-label:has(textarea:focus) label,\\n    .p-float-label:has(textarea.p-filled) label,\\n    .p-float-label:has(.p-inputwrapper-focus) label,\\n    .p-float-label:has(.p-inputwrapper-filled) label {\\n        top: -.75rem;\\n        font-size: 12px;\\n    }\\n    \\n    .p-float-label .p-placeholder,\\n    .p-float-label input::placeholder,\\n    .p-float-label .p-inputtext::placeholder {\\n        opacity: 0;\\n        transition-property: all;\\n        transition-timing-function: ease;\\n    }\\n    \\n    .p-float-label .p-focus .p-placeholder,\\n    .p-float-label input:focus::placeholder,\\n    .p-float-label .p-inputtext:focus::placeholder {\\n        opacity: 1;\\n        transition-property: all;\\n        transition-timing-function: ease;\\n    }\\n}\";\nvar FloatLabelBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'FloatLabel',\n    children: undefined\n  },\n  css: {\n    classes: classes,\n    styles: styles\n  }\n});\n\nvar FloatLabel = /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var mergeProps = useMergeProps();\n  var context = React.useContext(PrimeReactContext);\n  var props = FloatLabelBase.getProps(inProps, context);\n  var elementRef = React.useRef(ref);\n  var _FloatLabelBase$setMe = FloatLabelBase.setMetaData({\n      props: props\n    }),\n    ptm = _FloatLabelBase$setMe.ptm,\n    cx = _FloatLabelBase$setMe.cx,\n    isUnstyled = _FloatLabelBase$setMe.isUnstyled;\n  useHandleStyle(FloatLabelBase.css.styles, isUnstyled, {\n    name: 'floatlabel'\n  });\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: classNames(cx('root'))\n  }, FloatLabelBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(\"span\", rootProps, props.children);\n}));\nFloatLabel.displayName = 'FloatLabel';\n\nexport { FloatLabel };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,aAAa,EAAEC,cAAc,QAAQ,0BAA0B;AACxE,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,WAAW,EAAEC,UAAU,QAAQ,kBAAkB;AAE1D,IAAIC,OAAO,GAAG;EACZC,IAAI,EAAE;AACR,CAAC;AACD,IAAIC,MAAM,GAAG,g0CAAg0C;AAC70C,IAAIC,cAAc,GAAGR,aAAa,CAACS,MAAM,CAAC;EACxCC,YAAY,EAAE;IACZC,MAAM,EAAE,YAAY;IACpBC,QAAQ,EAAEC;EACZ,CAAC;EACDC,GAAG,EAAE;IACHT,OAAO,EAAEA,OAAO;IAChBE,MAAM,EAAEA;EACV;AACF,CAAC,CAAC;AAEF,IAAIQ,UAAU,GAAG,aAAajB,KAAK,CAACkB,IAAI,CAAC,aAAalB,KAAK,CAACmB,UAAU,CAAC,UAAUC,OAAO,EAAEC,GAAG,EAAE;EAC7F,IAAIC,UAAU,GAAGlB,aAAa,CAAC,CAAC;EAChC,IAAImB,OAAO,GAAGvB,KAAK,CAACwB,UAAU,CAACvB,iBAAiB,CAAC;EACjD,IAAIwB,KAAK,GAAGf,cAAc,CAACgB,QAAQ,CAACN,OAAO,EAAEG,OAAO,CAAC;EACrD,IAAII,UAAU,GAAG3B,KAAK,CAAC4B,MAAM,CAACP,GAAG,CAAC;EAClC,IAAIQ,qBAAqB,GAAGnB,cAAc,CAACoB,WAAW,CAAC;MACnDL,KAAK,EAAEA;IACT,CAAC,CAAC;IACFM,GAAG,GAAGF,qBAAqB,CAACE,GAAG;IAC/BC,EAAE,GAAGH,qBAAqB,CAACG,EAAE;IAC7BC,UAAU,GAAGJ,qBAAqB,CAACI,UAAU;EAC/C9B,cAAc,CAACO,cAAc,CAACM,GAAG,CAACP,MAAM,EAAEwB,UAAU,EAAE;IACpDC,IAAI,EAAE;EACR,CAAC,CAAC;EACFlC,KAAK,CAACmC,SAAS,CAAC,YAAY;IAC1B9B,WAAW,CAAC+B,YAAY,CAACT,UAAU,EAAEN,GAAG,CAAC;EAC3C,CAAC,EAAE,CAACM,UAAU,EAAEN,GAAG,CAAC,CAAC;EACrB,IAAIgB,SAAS,GAAGf,UAAU,CAAC;IACzBD,GAAG,EAAEM,UAAU;IACfW,SAAS,EAAEhC,UAAU,CAAC0B,EAAE,CAAC,MAAM,CAAC;EAClC,CAAC,EAAEtB,cAAc,CAAC6B,aAAa,CAACd,KAAK,CAAC,EAAEM,GAAG,CAAC,MAAM,CAAC,CAAC;EACpD,OAAO,aAAa/B,KAAK,CAACwC,aAAa,CAAC,MAAM,EAAEH,SAAS,EAAEZ,KAAK,CAACX,QAAQ,CAAC;AAC5E,CAAC,CAAC,CAAC;AACHG,UAAU,CAACwB,WAAW,GAAG,YAAY;AAErC,SAASxB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}